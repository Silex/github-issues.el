{"name":"Github-issues.el","body":"# github-issues.el\r\n\r\nAn [Emacs](http://www.gnu.org/software/emacs/) mode for managing project's issues on [GitHub](https://github.com/).\r\n\r\nThe final goal for using `github-issues.el` is to list, show, add, edit, remove, comment and assign issues on GitHub hosted projects without leaving Emacs.\r\n\r\n## Dependencies\r\n\r\nI've tried to keep the dependencies to a minimum. Current dependencies are:\r\n\r\n* `tabulated-list`\r\n* `url`\r\n* `font-lock`\r\n\r\n## Functions\r\n\r\n### `github-issues (user repo)`\r\n\r\nOpens a `github-issues-mode` buffer listing the issues for the given user and repository.\r\n\r\n### `github-issue (user repo number)` **NOT IMPLEMENTED**\r\n\r\nInteractive function that opens a new `github-issue-mode` buffer with the given issue description.\r\n\r\n## Non-interactive functions\r\n\r\n### `github-issues-buffer (user repo)`\r\n\r\nCreates or return the buffer for the given user and repository.\u0001\r\n\r\n### `github-issue-buffer (user repo number)`\r\n\r\nCreates or return the buffer for the given issue.\r\n\r\n### `github-parse-response`\r\n\r\nParses the JSON response from a GitHub API call.\r\n\r\n### `github-api-repository-issues (user repo)`\r\n\r\nReturns a list of issues in `plist` format.\r\n\r\n### `github-api-repository-issue (user repo number)`\r\n\r\nReturn an issue data in `plist` format.\r\n\r\n### `github-issues-populate (buffer issues)`\r\n\r\nPopulates the given buffer with a list of issues. See `github-api-repository-issues`.\r\n\r\n### `github-issue-populate (buffer issue)`\r\n\r\nPopulates the given buffer with an issue description. See `github-api-repository-issue`.\r\n\r\n## Modes\r\n\r\n### `github-issues-mode`\r\n\r\nMajor mode derived from `tabulated-list-mode`, to display a list of issues.\r\n\r\nIn this mode the following keymap is active:\r\n\r\n* `C-c r`: refresh the list of issues.\r\n\r\n### `github-issue-mode`\r\n\r\nMajor mode derived from `font-lock-mode` to display a given issue data.\r\n\r\nIn this mode the following keymap is active:\r\n\r\n* `C-c r`: refresh the issue data.\r\n* `C-c o`: open the issue in a browser.\r\n* `C-c a`: open the issue author page in a browser.\r\n\r\n## TODO\r\n\r\n* Cache results and add refresh functions.\r\n* Improve descriptions.\r\n* Add keymaps.\r\n* Improve issue information.\r\n* Add GitHub's authentication for issue management.\r\n* Add issues pagination.\r\n* Add customization options.","tagline":"github-issues.el --- Emacs utility functions and modes for managing GitHub projects' issues","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}